name: Build, test and push a Docker image

on:
  push:
    branches:
      - main
      - dev
    tags:
      - '*'

  workflow_dispatch:
    inputs:
      ref:
        description: 'ref to be deployed (e.g. "refs/heads/main", "v1.0.0", "2c0472cf")'
        type: string
        required: true
        default: refs/heads/dev
env:
  REF_ID: ${{ github.ref }}



jobs:
  My11thJob:
   permissions: write-all
   runs-on: ubuntu-latest

   outputs:
        deployment_env: ${{ env.DEPLOYMENT_ENV }}
        deployment_realm: ${{ env.DEPLOYMENT_REALM }}
        image_tag: ${{ env.TAG }}
   steps:
      - id: checkout_application_repo
        name: checkout application repo
        uses: actions/checkout@v4
        with:
            fetch-depth: 0
            fetch-tags: true
            ref: ${{ env.REF_ID }}
      - id: dev_image_tag
        name: Set Docker Stag image tag for updates of the DEV branch
        if: github.ref == 'refs/heads/dev'
        run: |

          echo TAG ="dev-$(git describe --tags --abbrev=7)" >> "$GITHUB_ENV"

          # Updates to the main branch are deployed to stage.
          echo DEPLOYMENT_ENV=dev >> "$GITHUB_ENV"
          echo DEPLOYMENT_REALM=nonprod >> "$GITHUB_ENV"

      - id: stage_image_tag
        name: Set Docker Stag image tag for updates of the main branch
        if: github.ref == 'refs/heads/main'
        run: |

          echo TAG ="$(git describe --tags --abbrev=7)" >> "$GITHUB_ENV"

          # Updates to the main branch are deployed to stage.
          echo DEPLOYMENT_ENV=stage >> "$GITHUB_ENV"
          echo DEPLOYMENT_REALM=nonprod >> "$GITHUB_ENV"

      - id: prod_image_tag
        name: Set Docker image tag to the git tag for tagged builds
        if: startsWith(github.ref, 'refs/tags/')
        run: |

          echo TAG ="$(git describe --tags --abbrev=7)" >> "$GITHUB_ENV"
          # Version tags are deployed to prod.
          echo DEPLOYMENT_ENV=prod >> "$GITHUB_ENV"
          echo DEPLOYMENT_REALM=prod >> "$GITHUB_ENV"
      - id: print_them_out
        run: |
         echo $GITHUB_OUTPUT
      - uses: docker/setup-buildx-action@v3

      - id: print_them_out_no
        run: |
         echo $GITHUB_OUTPUT
